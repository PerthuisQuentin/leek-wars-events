function getAdjacentCells(cell) {
	var x = getCellX(cell)
	var y = getCellY(cell)
	
	 var adjacentCells = arrayMap([
		{ x: 1, y: 0 },
		{ x: -1, y: 0 },
		{ x: 0, y: -1 },
		{ x: 0, y: 1 }
	], direction => getCellFromXY(x + direction.x, y + direction.y))
	 
	return arrayFilter(adjacentCells, cell => !!cell)
}

function getWalkableAdjacentCells(cell) {	 
	return arrayFilter(
		getAdjacentCells(cell),
		adjacentCell => !isObstacle(adjacentCell) && isEmptyCell(adjacentCell)
	)
}


function getReachableCellsWithDistance(sourceCell, mp) {
	var cellsToAnalyse = [sourceCell]
	var discoveredCells = []
	var reachableCells = [sourceCell:0]
	
	for (var distance = 1; distance <= mp; distance++) {
		for (var cell in cellsToAnalyse) {
			var adjacentCells = getWalkableAdjacentCells(cell)
			for (var adjacentCell in adjacentCells) {
				if (mapContainsKey(reachableCells, adjacentCell)) continue
				
				push(discoveredCells, adjacentCell)
				mapPut(reachableCells, adjacentCell, distance)
			}
		}
		
		cellsToAnalyse = discoveredCells
		discoveredCells = []
	}
	
	return reachableCells
}

function getReachableCells(sourceCell, mp) {
	return mapKeys(getReachableCellsWithDistance(sourceCell, mp))
}
